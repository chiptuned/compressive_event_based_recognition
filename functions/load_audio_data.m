function td_data = load_audio_data(filename)
% td_data = load_atis_data(filename)
%
% Loads data from files generated by the StreamLogger consumer for any type
% of event. This function only read (t, addr) and discard other fields (if
% any) of events.
% timestamps are in uS
% td_data is a structure containing the fields ts and addr
%

ev = load_addr_data_64bit_ts(filename);
td_data = convert_addr_to_audio(ev);
end

function audio_data = convert_addr_to_audio(td_data)

lvlmask = hex2dec('0000FFFF'); % level sur 16 bits
channelmask = hex2dec('000F0000'); % Channel (oreille) sur 4 bits
polmask = hex2dec('FFF00000'); % polarit√© sur 12 bits

% Maybe use Hamming weight instead?
lvlshift=0; % bits to shift x to right
channelshift=16; % bits to shift y to right
polshift=20; % bits to shift p to right

audio_data.ts = td_data.ts;
audio_data.level=double(bitshift(bitand(td_data.addr,lvlmask),-lvlshift));
audio_data.channel=double(bitshift(bitand(td_data.addr,channelmask),-channelshift));
audio_data.p=double(bitshift(bitand(td_data.addr,polmask),-polshift));
end