function [TD, EM] = ReadAER(filename)
% [TD, EM] = ReadAER(filename) 
% Reads in data from a ".val" file generated by the ATIS GUI v4.2 onwards
%
% TAKES IN:
%   'filename'
%       A string specifying the name of the file to be read. Typical filename
%       is "0000.val" if generated by the ATIS GUI
% 
% RETURNS:
%   'TD' 
%       A struct of "Temporal Difference" (TD) events with format
%           TD.x =  pixel X locations, strictly positive integers only (TD.x>0)
%           TD.y =  pixel Y locations, strictly positive integers only (TD.y>0)
%           TD.p =  event polarity. TD.p = 0 for OFF events, TD.p = 1 for ON
%                   events
%           TD.ts = event timestamps in microseconds
% 
%   'EM' 
%       A struct of grayscale "Exposure Measurement" events (EM events) with
%       format:
%           EM.x =  pixel X locations, strictly positive integers only (EM.x>0)
%           EM.y =  pixel Y locations, strictly positive integers only (EM.y>0)
%           EM.p =  event polarity. EM.p = 0 for first threshold, TD.p = 1 for
%                   second threshold
%           EM.ts = event timestamps in microseconds
% 
% If reading in datasets (N-Caltech101 or N-MNIST) use the functions
% included with the dataset instead.
% 
% 
% written by Garrick Orchard - June 2014
% garrickorchard@gmail.com

videoData = fopen(filename);
temp = fread(videoData);
fclose(videoData);
TD.y = uint16(1+ temp(4:4:end));
TD.x = uint16(1+ bitshift(bitand(temp(2:4:end),32),3)  + temp(3:4:end)); %bit 5
TD.p = uint8(bitshift(bitand(temp(2:4:end), 128), -7)); %bit 7
Type = uint8(bitshift(bitand(temp(2:4:end), 64), -6)); %bit 6
TD.ts = uint32(temp(1:4:end) + bitshift((bitand(temp(2:4:end), 31)), 8));% bit 4 downto 0

timeOffset = 0;
for i = 1:length(TD.ts)
    if ((TD.y(i) == 241) && (TD.x(i) ==306))
        Type(i) = 2;
        timeOffset = timeOffset + 2^13;
    else
        TD.ts(i) = TD.ts(i) + timeOffset;
    end
end

%
TD = RemoveNulls(TD, Type == 2);
Type = Type(Type ~= 2);

EM = RemoveNulls(TD, Type == 0);
TD = RemoveNulls(TD, Type == 1);

EM.x = double(EM.x);
EM.y = double(EM.y);
EM.p = double(EM.p);
EM.ts = double(EM.ts);

TD.x = double(TD.x);
TD.y = double(TD.y);
TD.p = double(TD.p);
TD.ts = double(TD.ts);
